version: "3.8"

services:
  delayservice:
    image: busybox
    command: >
      sh -c "echo 'Delaying datacollector startup for 180 seconds, waiting for database to be ready...'; sleep 180; echo 'Delay complete.'"
  datacollector:
    container_name: data_collector
    image: ghcr.io/laendleenergy/data_collector:latest
    ports:
      - "8080:8080"
    networks:
      - front-tier
      - back-tier
    depends_on:
      collector-database:
          condition: service_healthy
      delayservice:
          condition: service_completed_successfully
    environment:
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://collector-database:5432/quarkus
      - QUARKUS_DATASOURCE_USERNAME=quarkus
      - QUARKUS_DATASOURCE_PASSWORD=quarkus
      - MP_MESSAGING_INCOMING_SIMULATOR=85.215.60.151
      - MP_MESSAGING_INCOMING_SIMULATOR_PORT=1884
      - QUARKUS_HTTP_PORT=9000
  collector-database:
    container_name: collector-database
    image: timescale/timescaledb:latest-pg14
    environment:
      - POSTGRES_DB=quarkus
      - POSTGRES_USER=quarkus
      - POSTGRES_PASSWORD=quarkus
      - PGUSER="quarkus"
      - POSTGRES_URL="postgres://quarkus:quarkus@postgres:5432/quarkus"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - back-tier
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "quarkus", "-u", "quarkus"]
      start_period: 60s
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  front-tier:
    name: collector-front-tier
  back-tier:
    name: collector-back-tier